{"version":3,"sources":["components/Goods/Goods.tsx","App.tsx","index.tsx"],"names":["Goods","this","props","goods","sortBy","isReversed","filterLength","goodsSorted","filter","item","length","sort","w1","w2","localeCompare","reverse","Box","sx","width","maxWidth","bgcolor","List","map","ListItem","disablePadding","ListItemText","primary","React","Component","goodsFromServer","filterNumbers","startBtnStyled","mx","height","position","left","top","transform","mainBoxStyled","display","App","state","showGoods","setState","prevState","sortAlphabet","sortByLength","resetSort","filterByLength","value","Button","variant","onClick","className","gap","startIcon","color","FormControl","m","minWidth","size","Select","labelId","id","onChange","e","target","num","MenuItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.717456b8.chunk.js","sourcesContent":["import React from 'react';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\ntype Props = {\n  goods: string[],\n  sortBy: string,\n  isReversed: boolean,\n  filterLength: number,\n};\n\nclass Goods extends React.Component<Props, {}> {\n  render() {\n    const {\n      goods,\n      sortBy,\n      isReversed,\n      filterLength,\n    } = this.props;\n\n    let goodsSorted = [...goods].filter(item => item.length >= filterLength);\n\n    switch (sortBy) {\n      case 'alphabet':\n        goodsSorted.sort((w1, w2) => {\n          return w1.localeCompare(w2);\n        });\n        break;\n      case 'length':\n        goodsSorted.sort((w1, w2) => {\n          return w1.length - w2.length;\n        });\n        break;\n      case 'initial':\n        goodsSorted = [...goods];\n        break;\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      goodsSorted.reverse();\n    }\n\n    return (\n      <Box sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n        <nav aria-label=\"secondary mailbox folders\">\n          <List>\n            {goodsSorted.map(item => (\n              <ListItem disablePadding>\n                <ListItemText\n                  key={item}\n                  primary={item}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </nav>\n      </Box>\n    );\n  }\n}\n\nexport default Goods;\n","import React from 'react';\nimport './App.css';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Goods from './components/Goods/Goods';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst filterNumbers: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\ntype State = {\n  showGoods: boolean,\n  sortBy: string,\n  isReversed: boolean,\n  filterLength: number,\n};\n\nconst startBtnStyled = {\n  mx: 'auto',\n  width: '200px',\n  height: '60px',\n  position: 'absolute',\n  left: '50%',\n  top: '50%',\n  transform: 'translate(-50%, -50%)',\n};\n\nconst mainBoxStyled = {\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  bgcolor: 'background.paper',\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    showGoods: false,\n    sortBy: '',\n    isReversed: false,\n    filterLength: 1,\n  };\n\n  showGoods = () => {\n    this.setState((prevState) => ({\n      showGoods: !prevState.showGoods,\n    }));\n  };\n\n  sortAlphabet = () => {\n    this.setState({ sortBy: 'alphabet' });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  resetSort = () => {\n    this.setState({\n      sortBy: 'initial',\n      filterLength: 1,\n    });\n  };\n\n  filterByLength = (value: number) => {\n    this.setState({ filterLength: value });\n  };\n\n  reverse = () => {\n    this.setState(prevState => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  render() {\n    const {\n      showGoods,\n      sortBy,\n      isReversed,\n      filterLength,\n    } = this.state;\n\n    return (\n      <Box sx={mainBoxStyled}>\n        {!showGoods && (\n          <Button\n            variant=\"contained\"\n            onClick={this.showGoods}\n            sx={startBtnStyled}\n          >\n            Start\n          </Button>\n        )}\n\n        {showGoods && (\n          <div className=\"content\">\n            <Goods\n              goods={goodsFromServer}\n              sortBy={sortBy}\n              isReversed={isReversed}\n              filterLength={filterLength}\n            />\n\n            <Box sx={{ width: '100%', display: 'grid', gap: '20px' }}>\n              <Button\n                variant=\"contained\"\n                onClick={this.sortAlphabet}\n              >\n                Sort alphabetically\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                onClick={this.reverse}\n              >\n                Reverse\n              </Button>\n\n              <Button\n                variant=\"outlined\"\n                startIcon={<DeleteIcon />}\n                onClick={this.resetSort}\n                color=\"error\"\n              >\n                Reset\n              </Button>\n\n              <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={filterLength}\n                  onChange={(e) => {\n                    this.filterByLength(+e.target.value);\n                  }}\n                >\n                  {filterNumbers.map(num => (\n                    <MenuItem\n                      key={num}\n                      value={num}\n                    >\n                      {num}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </div>\n        )}\n      </Box>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}